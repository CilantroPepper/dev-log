import{_ as s,o as a,c as t,U as l}from"./chunks/framework.c270b6c9.js";const n="/assets/message.d3f39ca7.png",e="/assets/notify.afd9b0b0.png",g=JSON.parse('{"title":"CC Tools 使用说明","description":"","frontmatter":{},"headers":[],"relativePath":"cc-tools.md","filePath":"cc-tools.md"}'),o={name:"cc-tools.md"},p=l(`<h1 id="cc-tools-使用说明" tabindex="-1">CC Tools 使用说明 <a class="header-anchor" href="#cc-tools-使用说明" aria-label="Permalink to &quot;CC Tools 使用说明&quot;">​</a></h1><p>CC Tools 是被 <code>src/utils/tools.ts</code> 导出的 <code>cc</code> 对象，包含了几乎所有常用基础功能的代码封装。</p><h2 id="路由切换" tabindex="-1">路由切换 <a class="header-anchor" href="#路由切换" aria-label="Permalink to &quot;路由切换&quot;">​</a></h2><h3 id="跳转到tab页" tabindex="-1">跳转到Tab页 <a class="header-anchor" href="#跳转到tab页" aria-label="Permalink to &quot;跳转到Tab页&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果你还不知道Tab页和Stack页的区别，请先阅读<a href="/guide.html">工程指南</a>中对应的介绍。</p></div><p>传入希望跳转的Tab路径，可选地传入查询内容，用于传递参数给目标Tab页。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 仅用于切换到某Tab页</span></span>
<span class="line"><span style="color:#82AAFF;">switchTab</span><span style="color:#A6ACCD;">(path: string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> query</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> any</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">): </span><span style="color:#89DDFF;">void</span></span></code></pre></div><p>请注意传入的 <code>path</code> 会自动在前面拼接上Tab页的标识符，所以不需要手动传入。</p><h3 id="跳转到stack页或白名单路由页" tabindex="-1">跳转到Stack页或白名单路由页 <a class="header-anchor" href="#跳转到stack页或白名单路由页" aria-label="Permalink to &quot;跳转到Stack页或白名单路由页&quot;">​</a></h3><p>传入希望跳转的Stack页/白名单路由页路径，可选地传入查询内容，用于传递参数给目标页。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 导航到某非Tab页</span></span>
<span class="line"><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(path: string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> query</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> any</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">): </span><span style="color:#89DDFF;">void</span></span></code></pre></div><p>请注意传入的 <code>path</code> 会自动在前面拼接上Stack页的标识符，所以不需要手动传入。</p><p>如果传入路径可以在白名单路由中被检索到，则会直接跳转。</p><h3 id="回到上一页" tabindex="-1">回到上一页 <a class="header-anchor" href="#回到上一页" aria-label="Permalink to &quot;回到上一页&quot;">​</a></h3><p>回到上一个访问的页面。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 回到上一页</span></span>
<span class="line"><span style="color:#82AAFF;">navigateBack</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void</span></span></code></pre></div><h2 id="全局交互" tabindex="-1">全局交互 <a class="header-anchor" href="#全局交互" aria-label="Permalink to &quot;全局交互&quot;">​</a></h2><h3 id="弹出对话框" tabindex="-1">弹出对话框 <a class="header-anchor" href="#弹出对话框" aria-label="Permalink to &quot;弹出对话框&quot;">​</a></h3><p>对话框可以容纳一段消息，也可包含自定义标题，提供确认按钮和（可选地）取消按钮。通常用于用户操作的二次确认。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 显示对话框</span></span>
<span class="line"><span style="color:#82AAFF;">modal</span><span style="color:#A6ACCD;">(message: string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> title</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cancelable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">any</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li><p>传入参数</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">必须传入</th><th style="text-align:center;">默认</th><th style="text-align:center;">备注</th></tr></thead><tbody><tr><td style="text-align:center;">message</td><td style="text-align:center;">是</td><td style="text-align:center;">/</td><td style="text-align:center;">对话框中的消息内容</td></tr><tr><td style="text-align:center;">title</td><td style="text-align:center;">否</td><td style="text-align:center;">&quot;提示&quot;</td><td style="text-align:center;">对话框标题</td></tr><tr><td style="text-align:center;">cacelable</td><td style="text-align:center;">否</td><td style="text-align:center;">true</td><td style="text-align:center;">是否显示取消按钮</td></tr></tbody></table></li><li><p>返回值</p><p>一个 <code>Promise</code>，用户<strong>点击了确认</strong>后成功回调，用户<strong>点击了取消</strong>或点击了<strong>背景遮罩层</strong>后失败回调</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>最佳实践：在编写业务代码时，你应该在 <code>.then</code> 回调中执行经过用户确认的操作，而 <code>.catch</code> 回调仅仅是指明了<strong>用户没有点击确认</strong>这件事</p></div></li></ul><p>可以参考下面的用例，也可以改写成 <code>async/await</code> 风格，用 <code>try / catch</code> 代替 <code>.then / .catch</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">modal</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">确认要退出登录吗</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 执行确认的业务代码</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">用户没有点击确认</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="弹出消息框" tabindex="-1">弹出消息框 <a class="header-anchor" href="#弹出消息框" aria-label="Permalink to &quot;弹出消息框&quot;">​</a></h3><p><img src="`+n+`" alt="Alt text"> 消息框是一个（可选的）包含图标的迷你信息提示框，表现为在显示区域顶部弹出。消息框通常用于提示用户简短的信息。</p><p>传入一段消息内容，并且可选地传入类型：</p><ul><li>info：灰色的提示框</li><li>error：红色的警示框</li><li>warning：橙色的警示框</li><li>success：绿色的成功框</li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 消息</span></span>
<span class="line"><span style="color:#82AAFF;">message</span><span style="color:#A6ACCD;">(message: string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> type</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">info</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">warning</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">): </span><span style="color:#89DDFF;">void</span></span></code></pre></div><h3 id="弹出通知栏" tabindex="-1">弹出通知栏 <a class="header-anchor" href="#弹出通知栏" aria-label="Permalink to &quot;弹出通知栏&quot;">​</a></h3><p><img src="`+e+`" alt="Alt text"></p><p>提示栏能够容纳比消息框更多的信息，通常遮挡住更多的屏幕空间，具体表现为从右往左弹出的可关闭信息框。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">notify</span><span style="color:#A6ACCD;">(message: string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> type</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">info</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">warning</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> title</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> duration </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2000</span><span style="color:#A6ACCD;">): </span><span style="color:#89DDFF;">void</span></span></code></pre></div><ul><li><p>传入参数</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">必须传入</th><th style="text-align:center;">默认</th><th style="text-align:center;">备注</th></tr></thead><tbody><tr><td style="text-align:center;">message</td><td style="text-align:center;">是</td><td style="text-align:center;">/</td><td style="text-align:center;">通知框中的消息内容</td></tr><tr><td style="text-align:center;">type</td><td style="text-align:center;">是</td><td style="text-align:center;">/</td><td style="text-align:center;">通知类型</td></tr><tr><td style="text-align:center;">title</td><td style="text-align:center;">否</td><td style="text-align:center;">&quot;提示&quot;</td><td style="text-align:center;">通知框标题</td></tr><tr><td style="text-align:center;">duration</td><td style="text-align:center;">否</td><td style="text-align:center;">2000</td><td style="text-align:center;">自动关闭的时间</td></tr></tbody></table></li><li><p>返回：<code>void</code></p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>当 <code>type</code> 有传入参数时，通知栏就会附带左侧的图标，对应了传入的 <code>type</code></p></div><h3 id="加载状态" tabindex="-1">加载状态 <a class="header-anchor" href="#加载状态" aria-label="Permalink to &quot;加载状态&quot;">​</a></h3><p>加载状态会锁定页面操作，并且显示一个正在转圈的加载动画，直至手动关闭加载。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">loading</span><span style="color:#A6ACCD;">(text</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> background</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> string): </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">close</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li><p>传入参数（所有参数都是可选的）</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">默认</th><th style="text-align:center;">备注</th><th style="text-align:center;">参数类型</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">text</td><td style="text-align:center;">/</td><td style="text-align:center;">加载状态提示文本</td><td style="text-align:center;">string</td><td style="text-align:center;">/</td></tr><tr><td style="text-align:center;">background</td><td style="text-align:center;">transparent</td><td style="text-align:center;">加载动画全屏背景颜色</td><td style="text-align:center;">string</td><td style="text-align:center;">&#39;#ffffff&#39;</td></tr></tbody></table></li><li><p>返回值：一个包含 <code>close()</code> 方法的对象，用于关闭加载</p></li><li><p>示例</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> loader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loading</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">[执行Promise]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">finally</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">loader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡最佳实践：结合 <code>Promise</code> 使用时（通常是API请求）在 <code>finally</code> 块中调用加载框的关闭方法。</p></div><h2 id="文件选择" tabindex="-1">文件选择 <a class="header-anchor" href="#文件选择" aria-label="Permalink to &quot;文件选择&quot;">​</a></h2><p>打开系统文件选择器，返回一个 <code>promise</code>，若用户已选择文件，则会在成功回调中传入。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(accept</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> string[]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> multiple </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">FileList</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>其中：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FileList</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">File</span><span style="color:#A6ACCD;">[]</span></span></code></pre></div><ul><li><p>传入参数（都为可选参数）</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">默认</th><th style="text-align:center;">备注</th><th style="text-align:center;">参数类型</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">accept</td><td style="text-align:center;">/</td><td style="text-align:center;">文件类型(后缀)</td><td style="text-align:center;">string[]</td><td style="text-align:center;">[&#39;.png&#39;, &#39;.jpg&#39;]</td></tr><tr><td style="text-align:center;">multiple</td><td style="text-align:center;">false</td><td style="text-align:center;">是否接受多选</td><td style="text-align:center;">boolean</td><td style="text-align:center;">false</td></tr></tbody></table></li><li><p>返回值</p><p>返回一个 <code>Promise</code>，成功回调的传入参数为用户选择的文件列表（<code>File[]</code>）</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>只要用户选择了文件，就一定会进入成功回调，且无论多选还是单选，成功回调的入参都一定是<strong>数组</strong>，也就是 <code>File[]</code></p></div></li><li><p>示例</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">chooseFile</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.jpg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">files</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">cc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">notify</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">已选择</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">files</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">个文件</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">files</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(e))</span></span></code></pre></div></li></ul><h2 id="预览文件" tabindex="-1">预览文件 <a class="header-anchor" href="#预览文件" aria-label="Permalink to &quot;预览文件&quot;">​</a></h2><p>用于接收一个 <code>Response</code> 响应对象，然后将其传输的内容通过文件形式预览。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">previewFile</span><span style="color:#A6ACCD;">(response: Response): </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;void&gt;</span></span></code></pre></div><ul><li>传入<strong>未被读</strong>的 <code>Response</code> 对象（直接将指定 <code>type</code> 为 <code>blob</code> 的Request响应的内容传入就可以）</li><li>返回：<code>Promise</code>，标识成功或失败。实际业务中很少使用。</li></ul><h2 id="sm2加密" tabindex="-1">Sm2加密 <a class="header-anchor" href="#sm2加密" aria-label="Permalink to &quot;Sm2加密&quot;">​</a></h2><p>传入一个字符串，返回Sm2加密后的结果。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">sm2Encrypt</span><span style="color:#A6ACCD;">(value: string): string</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>登录时要将用户填写的密码使用该方法加密后进行传输。</p></div>`,53),c=[p];function r(y,i,D,d,F,C){return a(),t("div",null,c)}const h=s(o,[["render",r]]);export{g as __pageData,h as default};
